# /etc/nginx/conf.d/default.conf

# when we access http://localhost/backend/ it will round robin between these 3 servers
upstream backend {
  server google.com;
  server youtube.com;
  server facebook.com;
}

server {  
  listen 80; # ipv4
  listen [::]:80; # ipv6
  # listen 443 ssl;
  # listen [::]:443 ssl;
  # server_name using the docker container name
  server_name rproxy; 
  # docker logs
  access_log  /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log;
  # volume logs
  access_log  /var/log/nginx/rproxy_access.log;
  error_log  /var/log/nginx/rproxy_error.log;

  # ssl_certificate /etc/letsencrypt/live/mysite.com/fullchain.pem;
  # ssl_certificate_key /etc/letsencrypt/live/mysite.com/privkey.pem;

  location / {
    # This would be the directory where your app's static files are stored at
    # root /usr/share/nginx/html;
    root /var/www/html;
    try_files $uri /index.html;
    # we could also point the root to another frontend server.
  }
  # note the trailing slash on the location and proxy_pass
  # this will rewrite the url parameters 
  # so it doesn't pass /servera with the request
  # http://localhost/backend/1 > /1
  location /backend/ { 
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    # note that we use the upstream group name
    # you can use any other domain, ip, upstream or docker container name
    # note the trailing slash!
    proxy_pass http://backend/;
    proxy_ssl_session_reuse off;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
  }
}
